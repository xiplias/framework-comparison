# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateTodo {
  _avg: TodoAvgAggregate
  _count: TodoCountAggregate
  _max: TodoMaxAggregate
  _min: TodoMinAggregate
  _sum: TodoSumAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Mutation {
  createManyTodo(data: [TodoCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createTodo(data: TodoCreateInput!): Todo!
  deleteManyTodo(where: TodoWhereInput): AffectedRowsOutput!
  deleteTodo(where: TodoWhereUniqueInput!): Todo
  updateManyTodo(data: TodoUpdateManyMutationInput!, where: TodoWhereInput): AffectedRowsOutput!
  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo
  upsertTodo(create: TodoCreateInput!, update: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  aggregateTodo(cursor: TodoWhereUniqueInput, orderBy: [TodoOrderByWithRelationInput!], skip: Int, take: Int, where: TodoWhereInput): AggregateTodo!
  findFirstTodo(cursor: TodoWhereUniqueInput, distinct: [TodoScalarFieldEnum!], orderBy: [TodoOrderByWithRelationInput!], skip: Int, take: Int, where: TodoWhereInput): Todo
  groupByTodo(by: [TodoScalarFieldEnum!]!, having: TodoScalarWhereWithAggregatesInput, orderBy: [TodoOrderByWithAggregationInput!], skip: Int, take: Int, where: TodoWhereInput): [TodoGroupBy!]!
  todo(where: TodoWhereUniqueInput!): Todo
  todos(cursor: TodoWhereUniqueInput, distinct: [TodoScalarFieldEnum!], orderBy: [TodoOrderByWithRelationInput!], skip: Int, take: Int, where: TodoWhereInput): [Todo!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Todo {
  done: Boolean!
  id: Int!
  order: String!
  title: String!
}

type TodoAvgAggregate {
  id: Float
}

input TodoAvgOrderByAggregateInput {
  id: SortOrder
}

type TodoCountAggregate {
  _all: Int!
  done: Int!
  id: Int!
  order: Int!
  title: Int!
}

input TodoCountOrderByAggregateInput {
  done: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
}

input TodoCreateInput {
  done: Boolean
  order: String!
  title: String!
}

input TodoCreateManyInput {
  done: Boolean
  id: Int
  order: String!
  title: String!
}

type TodoGroupBy {
  _avg: TodoAvgAggregate
  _count: TodoCountAggregate
  _max: TodoMaxAggregate
  _min: TodoMinAggregate
  _sum: TodoSumAggregate
  done: Boolean!
  id: Int!
  order: String!
  title: String!
}

type TodoMaxAggregate {
  done: Boolean
  id: Int
  order: String
  title: String
}

input TodoMaxOrderByAggregateInput {
  done: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
}

type TodoMinAggregate {
  done: Boolean
  id: Int
  order: String
  title: String
}

input TodoMinOrderByAggregateInput {
  done: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
}

input TodoOrderByWithAggregationInput {
  _avg: TodoAvgOrderByAggregateInput
  _count: TodoCountOrderByAggregateInput
  _max: TodoMaxOrderByAggregateInput
  _min: TodoMinOrderByAggregateInput
  _sum: TodoSumOrderByAggregateInput
  done: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
}

input TodoOrderByWithRelationInput {
  done: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
}

enum TodoScalarFieldEnum {
  done
  id
  order
  title
}

input TodoScalarWhereWithAggregatesInput {
  AND: [TodoScalarWhereWithAggregatesInput!]
  NOT: [TodoScalarWhereWithAggregatesInput!]
  OR: [TodoScalarWhereWithAggregatesInput!]
  done: BoolWithAggregatesFilter
  id: IntWithAggregatesFilter
  order: StringWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type TodoSumAggregate {
  id: Int
}

input TodoSumOrderByAggregateInput {
  id: SortOrder
}

input TodoUpdateInput {
  done: BoolFieldUpdateOperationsInput
  order: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TodoUpdateManyMutationInput {
  done: BoolFieldUpdateOperationsInput
  order: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TodoWhereInput {
  AND: [TodoWhereInput!]
  NOT: [TodoWhereInput!]
  OR: [TodoWhereInput!]
  done: BoolFilter
  id: IntFilter
  order: StringFilter
  title: StringFilter
}

input TodoWhereUniqueInput {
  id: Int
  order: String
  title: String
}
